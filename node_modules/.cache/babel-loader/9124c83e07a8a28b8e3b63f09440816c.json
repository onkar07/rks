{"ast":null,"code":"var _jsxFileName = \"/Users/onkarsarang/Documents/reactWork/rks/rks/src/components/feeEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { db } from '../config/firebase'; // import './creditDebit.css'\n\nimport { getDocs, collection, addDoc, onSnapshot } from 'firebase/firestore';\nimport { query, orderBy, limit, getDocuments } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeeEntry() {\n  _s();\n\n  var currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const [month, setMonth] = useState(\"January\");\n  var monthly_fee = 1100;\n  var monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var recArray = [];\n  var dictt = [];\n  var records = {\n    student_id: \"\",\n    fee_amount: 0,\n    fee_month: \"\",\n    fee_date: currentTimeInSeconds\n  };\n  var studentId = useRef();\n  var amount = useRef();\n\n  const handleSubmit = async () => {\n    records.student_id = studentId.current.value;\n    records.fee_amount = amount.current.value;\n    records.fee_month = month;\n    console.log(records);\n\n    try {\n      const snap = await getDocs(collection(db, 'student_fees'));\n      snap.forEach(doc => {\n        var data = (doc.id, \" => \", doc.data());\n        recArray.push(data);\n      });\n\n      for (let i = 0; i < recArray.length; i++) {\n        dictt.push({\n          id: recArray[i].student_Id,\n          month: recArray[i].fee_month\n        });\n      }\n\n      let cn = true;\n      dictt.forEach(drec => {\n        if (drec.id == records.student_id && drec.month == records.fee_month) {\n          return cn = false;\n        }\n      });\n\n      if (cn == true) {\n        if (records.fee_amount > 1100) {\n          let reminder = Number(records.fee_amount) % 1100;\n\n          for (let i = 0; i < 12; i++) {\n            if (records.fee_month == monthArray[i]) {\n              console.log(\"count = \", i);\n            }\n          }\n\n          while (Number(records.fee_amount) / 1100 < 1) {\n            // try {\n            //     const docRef = await addDoc(collection(db, 'student_fees'), {\n            //         student_Id: records.student_id,\n            //         fee_amount: 1100,\n            //         fee_month: records.fee_month,\n            //         fee_date: records.fee_date\n            //     })\n            //     if (docRef) alert(\"Saved\")\n            // }\n            // catch (err) {\n            //     console.log(err)\n            //     alert(\"Falied\")\n            // }\n            console.log(\"1100\");\n          } // try {\n          //     const docRef = await addDoc(collection(db, 'student_fees'), {\n          //         student_Id: records.student_id,\n          //         fee_amount: Number(reminder),\n          //         fee_month: records.fee_month,\n          //         fee_date: records.fee_date\n          //     })\n          //     if (docRef) alert(\"Saved\")\n          // }\n          // catch (err) {\n          //     console.log(err)\n          //     alert(\"Falied\")\n          // }\n\n\n          console.log(reminder);\n        }\n\n        console.log(\"saved\");\n      }\n    } catch (err) {\n      console.log(err);\n    } // try {\n    //     const docRef = await addDoc(collection(db, 'student_fees'), {\n    //       student_Id: records.student_id,\n    //       fee_amount: Number(records.fee_amount),\n    //       fee_month: records.fee_month,\n    //       fee_date: records.fee_date\n    //     })\n    //     if(docRef) alert(\"Saved\")\n    //   }\n    //   catch (err) {\n    //     console.log(err)\n    //     alert(\"Falied\")\n    //   }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"debitCredit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlInput1\",\n          children: \"\\u0935\\u093F\\u0926\\u094D\\u092F\\u093E\\u0930\\u094D\\u0925\\u0940 \\u0928\\u0902\\u092C\\u0930 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: studentId,\n          name: \"subject\",\n          class: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          placeholder: \"\\u0935\\u093F\\u0937\\u092F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlInput1\",\n          children: \"\\u0930\\u0915\\u094D\\u0915\\u092E \\u20B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ref: amount,\n          name: \"amount\",\n          class: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          placeholder: \"\\u0930\\u0915\\u094D\\u0915\\u092E \\u20B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlSelect1\",\n          children: \"\\u092B\\u0940 \\u091A\\u093E \\u092E\\u0939\\u093F\\u0928\\u093E \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          class: \"form-control\",\n          value: month,\n          onChange: e => {\n            setMonth(e.target.value);\n          },\n          id: \"exampleFormControlSelect1\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"January\",\n            children: \"\\u091C\\u0928\\u0935\\u0930\\u0940 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"February\",\n            children: \"\\u092B\\u0930\\u0935\\u0930\\u0940 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"March\",\n            children: \"\\u092E\\u093E\\u0930\\u094D\\u091A \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"April\",\n            children: \"\\u0905\\u092A\\u094D\\u0930\\u0948\\u0932 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"May\",\n            children: \"\\u092E\\u0908 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"June\",\n            children: \"\\u091C\\u0942\\u0928 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"July\",\n            children: \"\\u091C\\u0941\\u0932\\u093E\\u0908 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"August\",\n            children: \"\\u0905\\u0917\\u0938\\u094D\\u0924 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"September\",\n            children: \"\\u0938\\u093F\\u0924\\u0902\\u092C\\u0930 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"October\",\n            children: \"\\u0905\\u0915\\u094D\\u091F\\u0942\\u092C\\u0930 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"November\",\n            children: \"\\u0928\\u0935\\u0902\\u092C\\u0930 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"month\",\n            value: \"December\",\n            children: \"\\u0926\\u093F\\u0938\\u0902\\u092C\\u0930 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"footer\",\n        class: \"btn btn-primary\",\n        onClick: e => {\n          e.preventDefault();\n          handleSubmit();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FeeEntry, \"Sz8GoTP4Bg2ArMjtxdq/dXlVox4=\");\n\n_c = FeeEntry;\nexport default FeeEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeeEntry\");","map":{"version":3,"sources":["/Users/onkarsarang/Documents/reactWork/rks/rks/src/components/feeEntry.js"],"names":["React","useRef","useState","db","getDocs","collection","addDoc","onSnapshot","query","orderBy","limit","getDocuments","FeeEntry","currentTimeInSeconds","Math","floor","Date","now","month","setMonth","monthly_fee","monthArray","recArray","dictt","records","student_id","fee_amount","fee_month","fee_date","studentId","amount","handleSubmit","current","value","console","log","snap","forEach","doc","data","id","push","i","length","student_Id","cn","drec","reminder","Number","err","e","target","preventDefault"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { db } from '../config/firebase';\n// import './creditDebit.css'\nimport { getDocs, collection, addDoc, onSnapshot } from 'firebase/firestore'\nimport { query, orderBy, limit, getDocuments } from \"firebase/firestore\";\nfunction FeeEntry() {\n    var currentTimeInSeconds = Math.floor(Date.now() / 1000);\n    const [month, setMonth] = useState(\"January\")\n    var monthly_fee = 1100;\n    var monthArray = [\"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"]\n    var recArray = [];\n    var dictt = [];\n    var records = {\n        student_id : \"\",\n        fee_amount : 0,\n        fee_month : \"\",\n        fee_date : currentTimeInSeconds\n    }\n    \n    \n    var studentId = useRef();\n    var amount = useRef();\n\n    const handleSubmit = async () =>{\n        records.student_id = studentId.current.value;\n        records.fee_amount = amount.current.value;\n        records.fee_month = month;\n        console.log(records)\n        try {\n            const snap = await getDocs(collection(db, 'student_fees'));\n            snap.forEach((doc) => {\n              var data = (doc.id, \" => \", doc.data())\n              recArray.push(data);\n            });\n\n            for(let i=0; i<recArray.length; i++){\n                dictt.push({id:recArray[i].student_Id,month:recArray[i].fee_month})\n            }\n            let cn = true;\n            dictt.forEach(drec=>{\n                if(drec.id == records.student_id && drec.month == records.fee_month){\n                    return cn=false;\n                }\n            })\n            \n            if( cn == true){\n                if(records.fee_amount > 1100){\n                    let reminder = Number(records.fee_amount) % 1100;\n                    for(let i=0; i<12; i++){\n                        if(records.fee_month == monthArray[i]){\n                            console.log(\"count = \",i)\n                        }\n                    }\n                    while(Number(records.fee_amount)/1100 < 1){\n                        // try {\n                        //     const docRef = await addDoc(collection(db, 'student_fees'), {\n                        //         student_Id: records.student_id,\n                        //         fee_amount: 1100,\n                        //         fee_month: records.fee_month,\n                        //         fee_date: records.fee_date\n                        //     })\n                        //     if (docRef) alert(\"Saved\")\n                        // }\n                        // catch (err) {\n                        //     console.log(err)\n                        //     alert(\"Falied\")\n                        // }\n                        console.log(\"1100\")\n                    }\n                    // try {\n                    //     const docRef = await addDoc(collection(db, 'student_fees'), {\n                    //         student_Id: records.student_id,\n                    //         fee_amount: Number(reminder),\n                    //         fee_month: records.fee_month,\n                    //         fee_date: records.fee_date\n                    //     })\n                    //     if (docRef) alert(\"Saved\")\n                    // }\n                    // catch (err) {\n                    //     console.log(err)\n                    //     alert(\"Falied\")\n                    // }\n                    console.log(reminder)\n                }\n                \n        console.log(\"saved\")\n            }\n          }\n          catch (err) {\n            console.log(err)\n          }\n\n        // try {\n        //     const docRef = await addDoc(collection(db, 'student_fees'), {\n        //       student_Id: records.student_id,\n        //       fee_amount: Number(records.fee_amount),\n        //       fee_month: records.fee_month,\n        //       fee_date: records.fee_date\n        //     })\n        //     if(docRef) alert(\"Saved\")\n        //   }\n        //   catch (err) {\n        //     console.log(err)\n        //     alert(\"Falied\")\n        //   }\n    }\n\n    return (\n        <div>\n            <form id=\"debitCredit\">\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">विद्यार्थी नंबर </label>\n                    <input type=\"text\" ref={studentId} name=\"subject\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"विषय\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">रक्कम ₹</label>\n                    <input type=\"number\" ref={amount} name=\"amount\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"रक्कम ₹\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlSelect1\">फी चा महिना </label>\n                    <select class=\"form-control\" value={month} onChange={(e) => { setMonth(e.target.value) }} id=\"exampleFormControlSelect1\">\n                        <option name=\"month\" value=\"January\">जनवरी </option>\n                        <option name=\"month\" value=\"February\">फरवरी </option>\n                        <option name=\"month\" value=\"March\">मार्च </option>\n                        <option name=\"month\" value=\"April\">अप्रैल </option>\n                        <option name=\"month\" value=\"May\">मई </option>\n                        <option name=\"month\" value=\"June\">जून </option>\n                        <option name=\"month\" value=\"July\">जुलाई </option>\n                        <option name=\"month\" value=\"August\">अगस्त </option>\n                        <option name=\"month\" value=\"September\">सितंबर </option>\n                        <option name=\"month\" value=\"October\">अक्टूबर </option>\n                        <option name=\"month\" value=\"November\">नवंबर </option>\n                        <option name=\"month\" value=\"December\">दिसंबर </option>\n\n                    </select>\n                </div>\n                \n                \n                <button type=\"button\" id=\"footer\" class=\"btn btn-primary\" onClick={(e) => {\n                    e.preventDefault();\n                    handleSubmit();\n                }}>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default FeeEntry\n"]},"metadata":{},"sourceType":"module"}